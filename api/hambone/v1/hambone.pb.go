// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: hambone.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Hambone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Img      string `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Position string `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Hambone) Reset() {
	*x = Hambone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hambone_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hambone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hambone) ProtoMessage() {}

func (x *Hambone) ProtoReflect() protoreflect.Message {
	mi := &file_hambone_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hambone.ProtoReflect.Descriptor instead.
func (*Hambone) Descriptor() ([]byte, []int) {
	return file_hambone_proto_rawDescGZIP(), []int{0}
}

func (x *Hambone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hambone) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Hambone) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hambone_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hambone_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_hambone_proto_rawDescGZIP(), []int{1}
}

func (x *GetRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api      string     `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Hambones []*Hambone `protobuf:"bytes,2,rep,name=hambones,proto3" json:"hambones,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hambone_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hambone_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_hambone_proto_rawDescGZIP(), []int{2}
}

func (x *GetResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *GetResponse) GetHambones() []*Hambone {
	if x != nil {
		return x.Hambones
	}
	return nil
}

var File_hambone_proto protoreflect.FileDescriptor

var file_hambone_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4b, 0x0a, 0x07, 0x48, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x48,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x27, 0x0a, 0x08, 0x68, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x52, 0x08,
	0x68, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x73, 0x32, 0x56, 0x0a, 0x0e, 0x48, 0x61, 0x6d, 0x62,
	0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x6d, 0x62, 0x6f, 0x6e, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hambone_proto_rawDescOnce sync.Once
	file_hambone_proto_rawDescData = file_hambone_proto_rawDesc
)

func file_hambone_proto_rawDescGZIP() []byte {
	file_hambone_proto_rawDescOnce.Do(func() {
		file_hambone_proto_rawDescData = protoimpl.X.CompressGZIP(file_hambone_proto_rawDescData)
	})
	return file_hambone_proto_rawDescData
}

var file_hambone_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_hambone_proto_goTypes = []interface{}{
	(*Hambone)(nil),     // 0: v1.Hambone
	(*GetRequest)(nil),  // 1: v1.GetRequest
	(*GetResponse)(nil), // 2: v1.GetResponse
}
var file_hambone_proto_depIdxs = []int32{
	0, // 0: v1.GetResponse.hambones:type_name -> v1.Hambone
	1, // 1: v1.HamboneService.GetHambones:input_type -> v1.GetRequest
	2, // 2: v1.HamboneService.GetHambones:output_type -> v1.GetResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hambone_proto_init() }
func file_hambone_proto_init() {
	if File_hambone_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hambone_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hambone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hambone_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hambone_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hambone_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hambone_proto_goTypes,
		DependencyIndexes: file_hambone_proto_depIdxs,
		MessageInfos:      file_hambone_proto_msgTypes,
	}.Build()
	File_hambone_proto = out.File
	file_hambone_proto_rawDesc = nil
	file_hambone_proto_goTypes = nil
	file_hambone_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HamboneServiceClient is the client API for HamboneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HamboneServiceClient interface {
	GetHambones(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type hamboneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHamboneServiceClient(cc grpc.ClientConnInterface) HamboneServiceClient {
	return &hamboneServiceClient{cc}
}

func (c *hamboneServiceClient) GetHambones(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/v1.HamboneService/GetHambones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HamboneServiceServer is the server API for HamboneService service.
type HamboneServiceServer interface {
	GetHambones(context.Context, *GetRequest) (*GetResponse, error)
}

// UnimplementedHamboneServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHamboneServiceServer struct {
}

func (*UnimplementedHamboneServiceServer) GetHambones(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHambones not implemented")
}

func RegisterHamboneServiceServer(s *grpc.Server, srv HamboneServiceServer) {
	s.RegisterService(&_HamboneService_serviceDesc, srv)
}

func _HamboneService_GetHambones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HamboneServiceServer).GetHambones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.HamboneService/GetHambones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HamboneServiceServer).GetHambones(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HamboneService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.HamboneService",
	HandlerType: (*HamboneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHambones",
			Handler:    _HamboneService_GetHambones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hambone.proto",
}
