// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frowns.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CoffeeStatus struct {
	HaveCoffee           bool     `protobuf:"varint,1,opt,name=haveCoffee,proto3" json:"haveCoffee,omitempty"`
	CoffeeAmount         int64    `protobuf:"varint,2,opt,name=coffeeAmount,proto3" json:"coffeeAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoffeeStatus) Reset()         { *m = CoffeeStatus{} }
func (m *CoffeeStatus) String() string { return proto.CompactTextString(m) }
func (*CoffeeStatus) ProtoMessage()    {}
func (*CoffeeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f792b4dd78b1dd5a, []int{0}
}

func (m *CoffeeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeStatus.Unmarshal(m, b)
}
func (m *CoffeeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeStatus.Marshal(b, m, deterministic)
}
func (m *CoffeeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeStatus.Merge(m, src)
}
func (m *CoffeeStatus) XXX_Size() int {
	return xxx_messageInfo_CoffeeStatus.Size(m)
}
func (m *CoffeeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeStatus proto.InternalMessageInfo

func (m *CoffeeStatus) GetHaveCoffee() bool {
	if m != nil {
		return m.HaveCoffee
	}
	return false
}

func (m *CoffeeStatus) GetCoffeeAmount() int64 {
	if m != nil {
		return m.CoffeeAmount
	}
	return 0
}

type GetCoffeeStatus struct {
	HasAtLeast           int64    `protobuf:"varint,1,opt,name=hasAtLeast,proto3" json:"hasAtLeast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCoffeeStatus) Reset()         { *m = GetCoffeeStatus{} }
func (m *GetCoffeeStatus) String() string { return proto.CompactTextString(m) }
func (*GetCoffeeStatus) ProtoMessage()    {}
func (*GetCoffeeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f792b4dd78b1dd5a, []int{1}
}

func (m *GetCoffeeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCoffeeStatus.Unmarshal(m, b)
}
func (m *GetCoffeeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCoffeeStatus.Marshal(b, m, deterministic)
}
func (m *GetCoffeeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoffeeStatus.Merge(m, src)
}
func (m *GetCoffeeStatus) XXX_Size() int {
	return xxx_messageInfo_GetCoffeeStatus.Size(m)
}
func (m *GetCoffeeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoffeeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoffeeStatus proto.InternalMessageInfo

func (m *GetCoffeeStatus) GetHasAtLeast() int64 {
	if m != nil {
		return m.HasAtLeast
	}
	return 0
}

type CoffeeStatusResponse struct {
	Status               *CoffeeStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CoffeeStatusResponse) Reset()         { *m = CoffeeStatusResponse{} }
func (m *CoffeeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CoffeeStatusResponse) ProtoMessage()    {}
func (*CoffeeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f792b4dd78b1dd5a, []int{2}
}

func (m *CoffeeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoffeeStatusResponse.Unmarshal(m, b)
}
func (m *CoffeeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoffeeStatusResponse.Marshal(b, m, deterministic)
}
func (m *CoffeeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoffeeStatusResponse.Merge(m, src)
}
func (m *CoffeeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CoffeeStatusResponse.Size(m)
}
func (m *CoffeeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoffeeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoffeeStatusResponse proto.InternalMessageInfo

func (m *CoffeeStatusResponse) GetStatus() *CoffeeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*CoffeeStatus)(nil), "v1.CoffeeStatus")
	proto.RegisterType((*GetCoffeeStatus)(nil), "v1.GetCoffeeStatus")
	proto.RegisterType((*CoffeeStatusResponse)(nil), "v1.CoffeeStatusResponse")
}

func init() { proto.RegisterFile("frowns.proto", fileDescriptor_f792b4dd78b1dd5a) }

var fileDescriptor_f792b4dd78b1dd5a = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2b, 0xca, 0x2f,
	0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x94, 0x92, 0x49, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c,
	0xc9, 0xcc, 0x87, 0xa9, 0x50, 0x0a, 0xe2, 0xe2, 0x71, 0xce, 0x4f, 0x4b, 0x4b, 0x4d, 0x0d, 0x2e,
	0x49, 0x2c, 0x29, 0x2d, 0x16, 0x92, 0xe3, 0xe2, 0xca, 0x48, 0x2c, 0x4b, 0x85, 0x88, 0x49, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x04, 0x21, 0x89, 0x08, 0x29, 0x71, 0xf1, 0x24, 0x83, 0x59, 0x8e, 0xb9,
	0xf9, 0xa5, 0x79, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x28, 0x62, 0x4a, 0x86, 0x5c,
	0xfc, 0xee, 0xa9, 0x25, 0x98, 0xc6, 0x16, 0x3b, 0x96, 0xf8, 0xa4, 0x26, 0x16, 0x97, 0x80, 0x8d,
	0x65, 0x0e, 0x42, 0x12, 0x51, 0x72, 0xe0, 0x12, 0x41, 0x56, 0x1f, 0x94, 0x5a, 0x5c, 0x90, 0x9f,
	0x57, 0x9c, 0x2a, 0xa4, 0xc1, 0xc5, 0x56, 0x0c, 0x16, 0x01, 0xeb, 0xe1, 0x36, 0x12, 0xd0, 0x2b,
	0x33, 0xd4, 0x43, 0x51, 0x09, 0x95, 0x37, 0x4a, 0xe5, 0x12, 0x46, 0x16, 0x0f, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x15, 0xf2, 0xe3, 0xe2, 0x74, 0x4f, 0x2d, 0x81, 0xba, 0x42, 0x18, 0xa4, 0x1b,
	0xcd, 0x69, 0x52, 0x12, 0x18, 0x46, 0x42, 0x2d, 0x57, 0x12, 0x6a, 0xba, 0xfc, 0x64, 0x32, 0x13,
	0x8f, 0x10, 0x97, 0x7e, 0x99, 0xa1, 0x3e, 0x24, 0x5c, 0x93, 0xd8, 0xc0, 0xc1, 0x66, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x14, 0x05, 0x4e, 0xfc, 0x68, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoffeeStatusServiceClient is the client API for CoffeeStatusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoffeeStatusServiceClient interface {
	GetStatus(ctx context.Context, in *GetCoffeeStatus, opts ...grpc.CallOption) (*CoffeeStatusResponse, error)
}

type coffeeStatusServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoffeeStatusServiceClient(cc *grpc.ClientConn) CoffeeStatusServiceClient {
	return &coffeeStatusServiceClient{cc}
}

func (c *coffeeStatusServiceClient) GetStatus(ctx context.Context, in *GetCoffeeStatus, opts ...grpc.CallOption) (*CoffeeStatusResponse, error) {
	out := new(CoffeeStatusResponse)
	err := c.cc.Invoke(ctx, "/v1.CoffeeStatusService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoffeeStatusServiceServer is the server API for CoffeeStatusService service.
type CoffeeStatusServiceServer interface {
	GetStatus(context.Context, *GetCoffeeStatus) (*CoffeeStatusResponse, error)
}

func RegisterCoffeeStatusServiceServer(s *grpc.Server, srv CoffeeStatusServiceServer) {
	s.RegisterService(&_CoffeeStatusService_serviceDesc, srv)
}

func _CoffeeStatusService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoffeeStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeStatusServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CoffeeStatusService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeStatusServiceServer).GetStatus(ctx, req.(*GetCoffeeStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoffeeStatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CoffeeStatusService",
	HandlerType: (*CoffeeStatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _CoffeeStatusService_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frowns.proto",
}
