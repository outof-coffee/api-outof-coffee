// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: frowns.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CoffeeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveCoffee   bool  `protobuf:"varint,1,opt,name=haveCoffee,proto3" json:"haveCoffee,omitempty"`
	CoffeeAmount int64 `protobuf:"varint,2,opt,name=coffeeAmount,proto3" json:"coffeeAmount,omitempty"`
}

func (x *CoffeeStatus) Reset() {
	*x = CoffeeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frowns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoffeeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoffeeStatus) ProtoMessage() {}

func (x *CoffeeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_frowns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoffeeStatus.ProtoReflect.Descriptor instead.
func (*CoffeeStatus) Descriptor() ([]byte, []int) {
	return file_frowns_proto_rawDescGZIP(), []int{0}
}

func (x *CoffeeStatus) GetHaveCoffee() bool {
	if x != nil {
		return x.HaveCoffee
	}
	return false
}

func (x *CoffeeStatus) GetCoffeeAmount() int64 {
	if x != nil {
		return x.CoffeeAmount
	}
	return 0
}

type GetCoffeeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasAtLeast int64 `protobuf:"varint,1,opt,name=hasAtLeast,proto3" json:"hasAtLeast,omitempty"`
}

func (x *GetCoffeeStatus) Reset() {
	*x = GetCoffeeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frowns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeeStatus) ProtoMessage() {}

func (x *GetCoffeeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_frowns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeeStatus.ProtoReflect.Descriptor instead.
func (*GetCoffeeStatus) Descriptor() ([]byte, []int) {
	return file_frowns_proto_rawDescGZIP(), []int{1}
}

func (x *GetCoffeeStatus) GetHasAtLeast() int64 {
	if x != nil {
		return x.HasAtLeast
	}
	return 0
}

type CoffeeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CoffeeStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CoffeeStatusResponse) Reset() {
	*x = CoffeeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frowns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoffeeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoffeeStatusResponse) ProtoMessage() {}

func (x *CoffeeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frowns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoffeeStatusResponse.ProtoReflect.Descriptor instead.
func (*CoffeeStatusResponse) Descriptor() ([]byte, []int) {
	return file_frowns_proto_rawDescGZIP(), []int{2}
}

func (x *CoffeeStatusResponse) GetStatus() *CoffeeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_frowns_proto protoreflect.FileDescriptor

var file_frowns_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x77, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x52, 0x0a, 0x0c, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x41, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x73,
	0x41, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x6f, 0x66, 0x66, 0x65,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x65, 0x0a, 0x13, 0x43, 0x6f, 0x66,
	0x66, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x6f, 0x77, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frowns_proto_rawDescOnce sync.Once
	file_frowns_proto_rawDescData = file_frowns_proto_rawDesc
)

func file_frowns_proto_rawDescGZIP() []byte {
	file_frowns_proto_rawDescOnce.Do(func() {
		file_frowns_proto_rawDescData = protoimpl.X.CompressGZIP(file_frowns_proto_rawDescData)
	})
	return file_frowns_proto_rawDescData
}

var file_frowns_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_frowns_proto_goTypes = []interface{}{
	(*CoffeeStatus)(nil),         // 0: v1.CoffeeStatus
	(*GetCoffeeStatus)(nil),      // 1: v1.GetCoffeeStatus
	(*CoffeeStatusResponse)(nil), // 2: v1.CoffeeStatusResponse
}
var file_frowns_proto_depIdxs = []int32{
	0, // 0: v1.CoffeeStatusResponse.status:type_name -> v1.CoffeeStatus
	1, // 1: v1.CoffeeStatusService.GetStatus:input_type -> v1.GetCoffeeStatus
	2, // 2: v1.CoffeeStatusService.GetStatus:output_type -> v1.CoffeeStatusResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_frowns_proto_init() }
func file_frowns_proto_init() {
	if File_frowns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frowns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoffeeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frowns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoffeeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frowns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoffeeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frowns_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frowns_proto_goTypes,
		DependencyIndexes: file_frowns_proto_depIdxs,
		MessageInfos:      file_frowns_proto_msgTypes,
	}.Build()
	File_frowns_proto = out.File
	file_frowns_proto_rawDesc = nil
	file_frowns_proto_goTypes = nil
	file_frowns_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoffeeStatusServiceClient is the client API for CoffeeStatusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoffeeStatusServiceClient interface {
	GetStatus(ctx context.Context, in *GetCoffeeStatus, opts ...grpc.CallOption) (*CoffeeStatusResponse, error)
}

type coffeeStatusServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCoffeeStatusServiceClient(cc grpc.ClientConnInterface) CoffeeStatusServiceClient {
	return &coffeeStatusServiceClient{cc}
}

func (c *coffeeStatusServiceClient) GetStatus(ctx context.Context, in *GetCoffeeStatus, opts ...grpc.CallOption) (*CoffeeStatusResponse, error) {
	out := new(CoffeeStatusResponse)
	err := c.cc.Invoke(ctx, "/v1.CoffeeStatusService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoffeeStatusServiceServer is the server API for CoffeeStatusService service.
type CoffeeStatusServiceServer interface {
	GetStatus(context.Context, *GetCoffeeStatus) (*CoffeeStatusResponse, error)
}

// UnimplementedCoffeeStatusServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoffeeStatusServiceServer struct {
}

func (*UnimplementedCoffeeStatusServiceServer) GetStatus(context.Context, *GetCoffeeStatus) (*CoffeeStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}

func RegisterCoffeeStatusServiceServer(s *grpc.Server, srv CoffeeStatusServiceServer) {
	s.RegisterService(&_CoffeeStatusService_serviceDesc, srv)
}

func _CoffeeStatusService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoffeeStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoffeeStatusServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CoffeeStatusService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoffeeStatusServiceServer).GetStatus(ctx, req.(*GetCoffeeStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoffeeStatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CoffeeStatusService",
	HandlerType: (*CoffeeStatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _CoffeeStatusService_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frowns.proto",
}
