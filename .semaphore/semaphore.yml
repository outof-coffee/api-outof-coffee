version: v1.0
name: api.outof.coffee - a public-ish api
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Build Protobuf APIs
    task:
      secrets:
        - name: containers-secret
      env_vars:
        - name: GO111MODULE
          value: "on"
        - name: PROTOBUF_VERSION
          value: "3.5.1"
      prologue:
        commands:
          - PROTOC_FILENAME=protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
          - pushd ~
          - curl -L https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOC_FILENAME} -o ${PROTOC_FILENAME}
          - unzip ${PROTOC_FILENAME}
          - bin/protoc --version
          - export PROTOC=$(pwd)/bin/protoc
          - export PATH=${PATH}:$(pwd)/bin
          - popd
      jobs:
      - name: go get & build
        commands:
          - checkout
          - sem-version go 1.12
          - pushd /; cache restore godeps-$SEMAPHORE_GIT_BRANCH-$(checksum go.mod),godeps-$SEMAPHORE_GIT_BRANCH,godeps-master ; popd
          - go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
          - go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
          - go get -u github.com/golang/protobuf/protoc-gen-go
          - go get -u github.com/grpc-ecosystem/grpc-gateway
          - go get -u ./...
          - cache store godeps-$SEMAPHORE_GIT_BRANCH-$(checksum go.mod) /home/semaphore/go/pkg/mod
          - make clean && make all
          - echo $CONTAINERS_PASSWORD | docker login --username "$CONTAINERS_USER" --password-stdin ${CONTAINERS_HOST}
          - docker build -f Dockerfile.hambone -t ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID} .
          - docker push ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID}
      epilogue:
        commands:
          - rm -rf /home/semaphore/.docker/config.json
          - git status --porcelain # TODO: implement merge commit / pull-request for deltas in generated code, if anything
  - name: Test hambone
    task:
      secrets:
        - name: containers-secret
      prologue:
        commands:
          - echo $CONTAINERS_PASSWORD | docker login --username "$CONTAINERS_USER" --password-stdin ${CONTAINERS_HOST}
          - docker pull ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID}
      jobs:
      - name: can it curl
        commands:
          - docker run -d -p 8080:8080 --name=hambone ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID}
          - wget http://localhost:8080/v1/hambones
      epilogue:
        always:
          commands:
            - rm -rf /home/semaphore/.docker/config.json
  - name: Deploy to Docker Registry
    task:
      secrets:
        - name: containers-secret
      prologue:
        commands:
          - echo $CONTAINERS_PASSWORD | docker login --username "$CONTAINERS_USER" --password-stdin ${CONTAINERS_HOST}
          - docker pull ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID}
      jobs:
        - name: deploy to registry
          commands:
            - docker tag ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID} ${CONTAINERS_HOST}/hambone:latest
            - docker tag ${CONTAINERS_HOST}/hambone:${SEMAPHORE_PIPELINE_ID} ${CONTAINERS_HOST}/hambone:v1
            - docker push ${CONTAINERS_HOST}/hambone:latest && docker push ${CONTAINERS_HOST}/hambone:v1
      epilogue:
        always:
          commands:
            - rm -rf /home/semaphore/.docker/config.json
promotions:
  - name: Production deploy
    pipeline_file: production-deploy.yml